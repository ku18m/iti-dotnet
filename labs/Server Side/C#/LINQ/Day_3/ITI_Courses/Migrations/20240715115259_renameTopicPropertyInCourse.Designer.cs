// <auto-generated />
using System;
using ITI_Courses.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITI_Courses.Migrations
{
    [DbContext(typeof(ITIContext))]
    [Migration("20240715115259_renameTopicPropertyInCourse")]
    partial class renameTopicPropertyInCourse
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.Property<int>("CoursesCrsId")
                        .HasColumnType("int");

                    b.Property<int>("InstructorsInsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesCrsId", "InstructorsInsId");

                    b.HasIndex("InstructorsInsId");

                    b.ToTable("CourseInstructor");
                });

            modelBuilder.Entity("ITI_Courses.NewModels.Course", b =>
                {
                    b.Property<int>("CrsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CrsId"));

                    b.Property<int?>("CrsDuration")
                        .HasColumnType("int");

                    b.Property<string>("CrsName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TopId")
                        .HasColumnType("int");

                    b.HasKey("CrsId");

                    b.HasIndex("TopId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ITI_Courses.NewModels.InsCourse", b =>
                {
                    b.Property<int>("InsId")
                        .HasColumnType("int");

                    b.Property<int>("CrsId")
                        .HasColumnType("int");

                    b.Property<string>("Evaluation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InsId", "CrsId");

                    b.HasIndex("CrsId");

                    b.ToTable("InsCourses");
                });

            modelBuilder.Entity("ITI_Courses.NewModels.Instructor", b =>
                {
                    b.Property<int>("InsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsId"));

                    b.Property<string>("InsDegree")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("InsId");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("ITI_Courses.NewModels.Topic", b =>
                {
                    b.Property<int>("TopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopId"));

                    b.Property<string>("TopName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.HasOne("ITI_Courses.NewModels.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCrsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITI_Courses.NewModels.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorsInsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ITI_Courses.NewModels.Course", b =>
                {
                    b.HasOne("ITI_Courses.NewModels.Topic", "Top")
                        .WithMany("Courses")
                        .HasForeignKey("TopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Top");
                });

            modelBuilder.Entity("ITI_Courses.NewModels.InsCourse", b =>
                {
                    b.HasOne("ITI_Courses.NewModels.Course", "Crs")
                        .WithMany()
                        .HasForeignKey("CrsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITI_Courses.NewModels.Instructor", "Ins")
                        .WithMany()
                        .HasForeignKey("InsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crs");

                    b.Navigation("Ins");
                });

            modelBuilder.Entity("ITI_Courses.NewModels.Topic", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
