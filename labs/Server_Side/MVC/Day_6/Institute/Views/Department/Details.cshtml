@model DepartmentDetailsVM
@{
    ViewData["Title"] = $"{@Model.DepartmentName} - Department";
    ViewData["HeaderTitle"] = $"{@Model.DepartmentName}";
    ViewData["HeaderSubTitle"] = "Department";
}


<button class="btn btn-primary">
    <a style="text-decoration:none" class="text-white" href="/department/Index">Back to All departments</a>
</button>
<div>
    <p class="display-3">Details of Department: @Model.DepartmentName</p>
    <div class="container d-flex">
        @* <img class="img-thumbnail m-auto" width="200" height="200" src="@Model.DepartmentImageUrl" alt="image preview" /> *@
    </div>
    <div class="container mt-2">
        <table class="table table-bordered table-hover text-center">
            <thead>
            <th>ID</th>
            <th>Name</th>
            <th>Manager</th>
            </thead>
            <tr>
                <td>@Model.DepartmentId</td>
                <td>@Model.DepartmentName</td>
                <td>@Model.DepartmentManager</td>
            </tr>
        <table/>

        <hr />
        <!--Courses Table-->

        <table class="table table-bordered table-hover text-center mt-3">
            <tr>
                <th colspan="5" class="fs-5">
                    Courses
                </th>
            </tr>
            <tr>
                <th>Course Id</th>
                <th>Course Name</th>
                <th>Course Degree</th>
                <th>Course Minimum Degree</th>
                <th>Details</th>
            </tr>
            @foreach (var item in Model.Courses)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Degree</td>
                    <td>@item.MinDegree</td>
                    <td>
                        <button class="btn btn-primary">
                            <a class="text-white" style="text-decoration:none" href="/course/Details/@item.Id">Details</a>
                        </button>
                    </td>
                </tr>
            }
        </table>

        <hr />
        <!--Instructors Table-->

        <table class="table table-bordered table-hover text-center mt-3">
            <tr class="border-top-2">
                <th colspan="5" class="fs-5">
                    Instructors
                </th>
            </tr>
            <tr>
                <th>Instructor Id</th>
                <th>Instructor Name</th>
                <th>Instructor Salary</th>
                <th>Instructor Address</th>
                <th>Instructor Address</th>
            </tr>
            @foreach (var item in Model.Instructors)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Salary.ToString("C")</td>
                    <td>@item.Address</td>
                    <td>
                        <button class="btn btn-primary">
                            <a class="text-white" style="text-decoration:none" href="/Instructor/Details/@item.Id">Details</a>
                        </button>
                    </td>
                </tr>
            }
        </table>

        <div class="d-flex justify-content-around fs-5">
            <button class="btn btn-warning">
                <a class="text-white" style="text-decoration:none" href="/department/edit/@Model.DepartmentId">Edit</a>
            </button>
            <button class="btn btn-danger" onclick="confirmDelete(@Model.DepartmentId)">
                <a class="text-white" style="text-decoration:none" href="#">Remove</a>
            </button>
        </div>
    </div>
</div>

<div id="deleteAlert" class="alert alert-dismissible fade fixed-bottom w-75 m-auto mb-2" role="alert">
</div>

<script>
    function confirmDelete(id) {
        if (confirm("Are you sure you want to delete this department?")) {
            fetch(`/department/Delete/${id}`, {
                method: "DELETE"
            })
                .then(response => response.json().then(data => ({ status: response.status, message: data.message })))
                .then(data => notifyDeletion(id, data))
                .catch(error => notifyDeletion(id, error));

        }
    }

    function notifyDeletion(id, data) {
        var notification = document.getElementById("deleteAlert");
        var row = document.getElementById(id);
        if (data.status != 201) {
            notification.classList.add("alert-danger");
        }
        else {
            notification.classList.add("alert-success");
        }
        notification.innerHTML = data.message;
        notification.classList.add("show");

        setTimeout(function () {
            notification.classList.remove("show");
            location.href = "/department/Index";
        }, 3000);
    }
</script>